{"ast":null,"code":"var _jsxFileName = \"/Users/smaronesy/Blockchain/python_blockchain/bunyaan_instance_1/frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport Navbar from './components/Navbar';\nimport './App.scss';\nimport axios from 'axios';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EC = require('elliptic').ec;\n\nconst ec = new EC('secp256k1');\nconst LOCAL_STORAGE_BLOCKCHAIN = 'blockchain';\nconst LOCAL_STORAGE_KEY = 'key';\n\nfunction App() {\n  _s();\n\n  const [blockchain, setBlockchain] = useState([]);\n  const [pubKey, setPubKey] = useState([]);\n  const [isLoading, setLoading] = useState(true);\n  const [keyCreated, setKeyCreated] = useState(false); // const transactionRef = useRef()\n\n  useEffect(() => {\n    localStorage.setItem(LOCAL_STORAGE_BLOCKCHAIN, JSON.stringify(blockchain));\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(pubKey));\n  }, [blockchain]);\n  useEffect(() => {\n    const blockchain = JSON.parse(localStorage.getItem(LOCAL_STORAGE_BLOCKCHAIN));\n    if (blockchain) setBlockchain(blockchain); // const fetchedKey = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY))\n  }, []);\n\n  if (keyCreated) {// console.log(pubKey);\n  }\n\n  useEffect(() => {\n    axios.get('/get_chain').then(res => {\n      setBlockchain(res.data); // console.log(res.data.chain)\n\n      setPubKey(res.data.public_key);\n      setKeyCreated(true);\n      setLoading(false);\n    });\n  }, []);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 14\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Navbar, {\n      blockchain: blockchain,\n      pubKey: pubKey\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"4v/o8bOUSeQYe+bemp5fHEZdmdo=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","useEffect","Navbar","axios","EC","require","ec","LOCAL_STORAGE_BLOCKCHAIN","LOCAL_STORAGE_KEY","App","blockchain","setBlockchain","pubKey","setPubKey","isLoading","setLoading","keyCreated","setKeyCreated","localStorage","setItem","JSON","stringify","parse","getItem","get","then","res","data","public_key"],"sources":["/Users/smaronesy/Blockchain/python_blockchain/bunyaan_instance_1/frontend/src/App.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport Navbar from './components/Navbar'\nimport './App.scss';\nimport axios from 'axios';\nimport './styles.css'\nconst EC = require('elliptic').ec;\nconst ec = new EC('secp256k1');\n\nconst LOCAL_STORAGE_BLOCKCHAIN = 'blockchain'\nconst LOCAL_STORAGE_KEY = 'key'\n\n\nfunction App() {\n  const [blockchain, setBlockchain] = useState([])\n  const [pubKey, setPubKey] = useState([]);\n  const [isLoading, setLoading] = useState(true);\n  const [keyCreated, setKeyCreated] = useState(false)\n  // const transactionRef = useRef()\n\n  useEffect(() => {\n      localStorage.setItem(LOCAL_STORAGE_BLOCKCHAIN, JSON.stringify(blockchain))\n      localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(pubKey))\n  }, [blockchain])\n\n  useEffect(() => {\n    const blockchain = JSON.parse(localStorage.getItem(LOCAL_STORAGE_BLOCKCHAIN))\n    if (blockchain) setBlockchain(blockchain)\n    // const fetchedKey = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY))\n  }, [])\n\n  if (keyCreated) {\n    // console.log(pubKey);\n  }\n\n  useEffect(() => {\n    axios.get('/get_chain')\n      .then(res => {\n        setBlockchain(res.data)\n        // console.log(res.data.chain)\n        setPubKey(res.data.public_key)\n        setKeyCreated(true)\n        setLoading(false);\n      })\n  }, [])\n\n  if (isLoading) {\n      return <div className=\"App\">Loading...</div>;\n  }\n\n  return (\n    <div>\n      <Navbar blockchain={blockchain} pubKey={pubKey} />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,SAAlC,QAAmD,OAAnD;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAO,YAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,cAAP;;;AACA,MAAMC,EAAE,GAAGC,OAAO,CAAC,UAAD,CAAP,CAAoBC,EAA/B;;AACA,MAAMA,EAAE,GAAG,IAAIF,EAAJ,CAAO,WAAP,CAAX;AAEA,MAAMG,wBAAwB,GAAG,YAAjC;AACA,MAAMC,iBAAiB,GAAG,KAA1B;;AAGA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BZ,QAAQ,CAAC,EAAD,CAA5C;EACA,MAAM,CAACa,MAAD,EAASC,SAAT,IAAsBd,QAAQ,CAAC,EAAD,CAApC;EACA,MAAM,CAACe,SAAD,EAAYC,UAAZ,IAA0BhB,QAAQ,CAAC,IAAD,CAAxC;EACA,MAAM,CAACiB,UAAD,EAAaC,aAAb,IAA8BlB,QAAQ,CAAC,KAAD,CAA5C,CAJa,CAKb;;EAEAE,SAAS,CAAC,MAAM;IACZiB,YAAY,CAACC,OAAb,CAAqBZ,wBAArB,EAA+Ca,IAAI,CAACC,SAAL,CAAeX,UAAf,CAA/C;IACAQ,YAAY,CAACC,OAAb,CAAqBX,iBAArB,EAAwCY,IAAI,CAACC,SAAL,CAAeT,MAAf,CAAxC;EACH,CAHQ,EAGN,CAACF,UAAD,CAHM,CAAT;EAKAT,SAAS,CAAC,MAAM;IACd,MAAMS,UAAU,GAAGU,IAAI,CAACE,KAAL,CAAWJ,YAAY,CAACK,OAAb,CAAqBhB,wBAArB,CAAX,CAAnB;IACA,IAAIG,UAAJ,EAAgBC,aAAa,CAACD,UAAD,CAAb,CAFF,CAGd;EACD,CAJQ,EAIN,EAJM,CAAT;;EAMA,IAAIM,UAAJ,EAAgB,CACd;EACD;;EAEDf,SAAS,CAAC,MAAM;IACdE,KAAK,CAACqB,GAAN,CAAU,YAAV,EACGC,IADH,CACQC,GAAG,IAAI;MACXf,aAAa,CAACe,GAAG,CAACC,IAAL,CAAb,CADW,CAEX;;MACAd,SAAS,CAACa,GAAG,CAACC,IAAJ,CAASC,UAAV,CAAT;MACAX,aAAa,CAAC,IAAD,CAAb;MACAF,UAAU,CAAC,KAAD,CAAV;IACD,CAPH;EAQD,CATQ,EASN,EATM,CAAT;;EAWA,IAAID,SAAJ,EAAe;IACX,oBAAO;MAAK,SAAS,EAAC,KAAf;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAP;EACH;;EAED,oBACE;IAAA,uBACE,QAAC,MAAD;MAAQ,UAAU,EAAEJ,UAApB;MAAgC,MAAM,EAAEE;IAAxC;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAKD;;GA1CQH,G;;KAAAA,G;AA4CT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}